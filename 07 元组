# 元组tuple：不可修改，可混装不同类型，有序，可重复
"""
元组：
变量名称 = (元素1, 元素2, 元素3, 元素4, 元素5)
变量名称 = ()
变量名称 = tuple()
"""
print(f"单个元素元组不加空逗号类型会变成:{type(('python'))}")
single_tuple = ("python", )  # 定义单独元素的元组，要在元素后加一个空的逗号，否则类型会变为字符串

tuple1 = ("python", 10, True)
print(f"读取\t\t元组[指定下标]:{tuple1[0]}")
print(f"反向读取\t元组[反向指定下标]:{tuple1[-3]}")

print(f"查找下标\t元组.index(指定元素):{tuple1.index(True)}")

print(f"统计元素\t元组.count(元素):{tuple1.count('python')}")

print(f"统计总数\tlen(数据容器):{len(tuple1)}")  # 统计元组中元素数量，得到一个int数字

def while_tuple(t):
    """
    使用while循环遍历元组
    :param t: 传入参数为元组
    :return: None
    """
    n = 0
    while n < len(t):
        print(f"元组的元素：{t[n]}")
        n += 1


print("while循环遍历元组")
while_tuple(tuple1)

def for_tuple(t):
    """
    使用for循环遍历元组
    :param t: 传入参数为元组
    :return: None
    """
    for element in t:
        print(f"元组的元素：{element}")


print("for循环遍历元组")
for_tuple(tuple1)

my_tuple = (100, ["python", "java"])
my_tuple[1][1] = "cpp"  # 元组不能修改，但可以修改内部list的内部元素
print(my_tuple)
